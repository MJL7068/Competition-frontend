{"version":3,"sources":["services/CompetitionService.js","components/WinNotification.js","App.js","index.js"],"names":["CompetitionService","axios","get","baseUrl","then","response","data","name","reqObject","post","WinNotification","_ref","winNote","concat","prize_size","react_default","a","createElement","className","message","App","_useState","useState","_useState2","Object","slicedToArray","setName","_useState3","_useState4","winners","setWinners","_useState5","_useState6","setMessage","_useState7","_useState8","note","setNote","useEffect","competitionService","reverse","value","onChange","event","target","onClick","clicks_to_win","winner","setTimeout","components_WinNotification","map","size","prizeSize","key","_id","ReactDOM","render","src_App","document","getElementById"],"mappings":"qNAqBeA,EAlBI,WAEf,OADgBC,IAAMC,IAAIC,gBACXC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAgB9BN,EARG,SAACO,GACf,IAAMC,EAAY,CACdD,KAAMA,GAGV,OADgBN,IAAMQ,KAAKN,aAAoBK,GAChCJ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCH9BI,EAbS,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QAClBL,EAAOK,EAAO,GAAAC,OAAMD,EAAQE,WAAd,qBAA8C,GAChE,OAAgB,OAAZF,EAEEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWX,GACXK,EAAQO,SAIR,MCkFAC,EAzFH,WAAM,IAAAC,EACQC,mBAAS,IADjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTd,EADSgB,EAAA,GACHG,EADGH,EAAA,GAAAI,EAEcL,mBAAS,IAFvBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGcT,mBAAS,kBAHvBU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGTZ,EAHSa,EAAA,GAGAC,EAHAD,EAAA,GAAAE,EAIQZ,mBAAS,MAJjBa,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAITE,EAJSD,EAAA,GAIHE,EAJGF,EAAA,GAMhBG,oBAAU,WACRC,IAEGnC,KAAK,SAAAyB,GACJC,EAAWD,EAAQW,cAEtB,IA4BH,OACEzB,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBAGFF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIE,IAGNJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kDAC+BF,EAAAC,EAAAC,cAAA,SAC3BwB,MAAOlC,EACPmC,SAzCe,SAACC,GACxBjB,EAAQiB,EAAMC,OAAOH,YA4CnB1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQ4B,QA3CI,WAChBN,EACahC,GACVH,KAAK,SAAAgC,GACJH,EAAW,eAAiBG,EAAKU,cAAgB,qCAE7B,IAAhBV,EAAKW,SACPV,EAAQD,GAERY,WAAW,WACTX,EAAQ,OACP,QAITE,IAEGnC,KAAK,SAAAyB,GACJC,EAAWD,EAAQW,cAyBWtB,UAAU,UAAxC,kCAIJH,EAAAC,EAAAC,cAACgC,EAAD,CAAiBrC,QAASwB,IAE1BrB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,UACGY,EAAQqB,IAAI,SAAAH,GACX,IAAII,EAAO,GAQX,MAPyB,UAArBJ,EAAOK,UACTD,EAAO,QACuB,WAArBJ,EAAOK,UAChBD,EAAO,kBACuB,UAArBJ,EAAOK,YAChBD,EAAO,WAEFpC,EAAAC,EAAAC,cAAA,MAAIoC,IAAKN,EAAOO,KAAMP,EAAOxC,KAA7B,IAAoC4C,eC9EvDI,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c420821b.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api'\n\nconst getWinners = () => {\n    const request = axios.get(baseUrl + '/winners')\n    return request.then(response => response.data)\n}\n\nconst getNumber = () => {\n    const request = axios.get(baseUrl + '/count')\n    return request.then(response => response.data)\n}\n\nconst increment = (name) => {\n    const reqObject = {\n        name: name\n    }\n    const request = axios.post(baseUrl + '/count', reqObject)\n    return request.then(response => response.data)\n}\n\nexport default {getWinners, getNumber, increment}","import React from 'react'\n\nconst WinNotification = ({winNote}) => {\n    let name = winNote ? `${winNote.prize_size}_win_notification` : \"\"\n    if (winNote !== null) {\n      return(\n          <div className={name}>\n              {winNote.message}\n          </div>\n      )\n    } else {\n        return null\n    }\n}\n\nexport default WinNotification","import React, {useState, useEffect} from 'react'\nimport competitionService from './services/CompetitionService'\nimport WinNotification from './components/WinNotification';\n\nconst App = () => {\n  const [name, setName] = useState('')\n  const [winners, setWinners] = useState([])\n  const [message, setMessage] = useState('Aloita peli...')\n  const [note, setNote] = useState(null)\n\n  useEffect(() => {\n    competitionService\n      .getWinners()\n      .then(winners => {\n        setWinners(winners.reverse())\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setName(event.target.value)\n  }\n\n  const handleClick = () => {\n      competitionService\n        .increment(name)\n        .then(note => {\n          setMessage(\"Voitto vain \" + note.clicks_to_win + \" painalluksen päässä...\")\n          \n          if (note.winner === true) {\n            setNote(note)\n\n            setTimeout(() => {\n              setNote(null)\n            }, 5000)\n          }\n        })\n\n      competitionService\n        .getWinners()\n        .then(winners => {\n          setWinners(winners.reverse())\n        })\n  }\n\n  return(\n    <div>\n      \n      <div>\n        <h1>Nappipeli!</h1>\n      </div>\n\n      <div>\n        <p>{message}</p>\n      </div>\n      \n      <div>\n        <form>\n          Kirjoita nimimerkki kenttään <input\n            value={name}\n            onChange={handleNameChange}/>\n        </form>\n      </div>\n\n      <div>\n        <div>\n          <button onClick={handleClick} className=\"button\"> Paina nappia voittaaksesi! </button>    \n        </div>\n      </div>\n\n      <WinNotification winNote={note}/>\n\n      <div>\n        <h2>Edelliset voittajat:</h2>\n        <ul>\n          {winners.map(winner => {\n            let size = ''\n            if (winner.prizeSize === 'large') {\n              size = '(iso)'\n            } else if (winner.prizeSize === 'medium') {\n              size = '(keskikokoinen)'\n            } else if (winner.prizeSize === 'small') {\n              size = '(pieni)'\n            }\n            return <li key={winner._id}>{winner.name} {size}</li>  \n          }\n          )}\n        </ul>\n      </div>\n    \n    </div>\n  )\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}